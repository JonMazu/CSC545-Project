/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package csc545project;
import java.sql.ResultSet;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;
import oracle.jdbc.OraclePreparedStatement;
import oracle.jdbc.OracleResultSet;

/**
 *
 * @author knux1
 */
public class NewNewRecipeIn extends javax.swing.JInternalFrame {
    String[] RecipesStr; 
    Connection conn = null;
    OraclePreparedStatement pst = null;
    OracleResultSet rs = null;
    List<Recipe> recipes = new ArrayList<Recipe>();
    Recipe selectedRecipe = null;
    Ingredient SelectedFood = null;
    List<Ingredient> allFood = null;
    List<String> allFoodID = null;
    boolean inFridge = false;
    /**
     * Creates new form NewNewRecipeIn
     */
    public NewNewRecipeIn() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        IngriendentList = new java.awt.List();
        deleteRecipe = new javax.swing.JButton();
        addNewRecipe = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchBar = new javax.swing.JTextPane();
        searchByCat = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        recipeInstructions = new javax.swing.JTextArea();
        searchByIngri = new javax.swing.JButton();
        RecipeList = new java.awt.List();

        jLayeredPane1.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jLayeredPane1HierarchyChanged(evt);
            }
        });

        IngriendentList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IngriendentListActionPerformed(evt);
            }
        });

        deleteRecipe.setText("Delete Selected");
        deleteRecipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRecipeActionPerformed(evt);
            }
        });

        addNewRecipe.setText("Add New Recipe");
        addNewRecipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewRecipeActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(searchBar);

        searchByCat.setText("Search by Category");
        searchByCat.setActionCommand("search");
        searchByCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByCatActionPerformed(evt);
            }
        });

        recipeInstructions.setColumns(20);
        recipeInstructions.setRows(5);
        jScrollPane4.setViewportView(recipeInstructions);

        searchByIngri.setText("Search By Ingredient");
        searchByIngri.setActionCommand("search");
        searchByIngri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByIngriActionPerformed(evt);
            }
        });

        RecipeList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecipeListActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayer(IngriendentList, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(deleteRecipe, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(addNewRecipe, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(searchByCat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(searchByIngri, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(RecipeList, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(addNewRecipe)
                        .addGap(995, 995, 995)
                        .addComponent(deleteRecipe))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchByCat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchByIngri))
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(RecipeList, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IngriendentList, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchByCat)
                        .addComponent(searchByIngri))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4)
                    .addComponent(RecipeList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(IngriendentList, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteRecipe)
                    .addComponent(addNewRecipe))
                .addGap(127, 127, 127))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IngriendentListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IngriendentListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IngriendentListActionPerformed

    private void deleteRecipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRecipeActionPerformed
        conn = ConnectDb.setupConnection();
        List<Recipe> recipes = new ArrayList<Recipe>();
        try
        {
            String sqlStatement = "delete recipe where name=? and category = ?";
            // Do we just want the recipe and category here? Are we also wanting to include the associated ingredients with these, or the instructions?
            // What about days of these meals? Are we wanting to give the user information on when this meal is scheduled for?
            pst = (OraclePreparedStatement) conn.prepareStatement(sqlStatement);
            pst.setString(1,  selectedRecipe.getName());
            pst.setString(2,  selectedRecipe.getCategory());
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        finally
        {
            ConnectDb.close(pst);
            ConnectDb.close(conn);
        }
        recipes.remove(selectedRecipe);
        RecipeList.remove(selectedRecipe.getName());
        IngriendentList.removeAll();
        recipeInstructions.setText("");
    }//GEN-LAST:event_deleteRecipeActionPerformed

    private void addNewRecipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewRecipeActionPerformed
        //PlsWork pls = new PlsWork();

    }//GEN-LAST:event_addNewRecipeActionPerformed

    private void searchByCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByCatActionPerformed
        RecipeList.removeAll();
        recipes.removeAll(recipes);
        List<String> empty = new ArrayList();
        Connection conn = ConnectDb.setupConnection();
        try
        {
            String sqlStatement = "select name from recipe where category =?";
            pst = (OraclePreparedStatement) conn.prepareStatement(sqlStatement);
            pst.setString(1, searchBar.getText());
            ResultSet rs =pst.executeQuery();
            while(rs.next()){
                empty.add(rs.getString(1));
            }
            RecipesStr = new String[empty.size()];
            for (int i = 0; i < empty.size(); i++) {
                RecipeList.add(empty.get(i));
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        finally
        {
            ConnectDb.close(rs);
            ConnectDb.close(pst);
            ConnectDb.close(conn);
        }

    }//GEN-LAST:event_searchByCatActionPerformed

    private void searchByIngriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByIngriActionPerformed
        RecipeList.removeAll();
        List<String> empty = new ArrayList();
        recipes.removeAll(recipes);

        conn = ConnectDb.setupConnection();
        try
        {
            String sqlStatement = "select name from recipe where recipeID IN (select recipeID from usesIngredient where ingredientID=(select ingredientID from ingredient where name =?))";
            pst = (OraclePreparedStatement) conn.prepareStatement(sqlStatement);
            pst.setString(1, searchBar.getText());
            ResultSet rs =pst.executeQuery();
            while(rs.next()){
                empty.add(rs.getString(1));
            }
            RecipesStr = new String[empty.size()];
            for (int i = 0; i < empty.size(); i++) {
                RecipeList.add(empty.get(i));
            }
        }

        catch (Exception e)
        {
            e.printStackTrace();
        }
        finally
        {
            ConnectDb.close(rs);
            ConnectDb.close(pst);
            ConnectDb.close(conn);
        }
        for(int x=0;x<recipes.size();x++){
            RecipeList.add(recipes.get(x).getName() + recipes.get(x).getCategory());
        }
    }//GEN-LAST:event_searchByIngriActionPerformed

    private void RecipeListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecipeListActionPerformed
        String Recipe = RecipeList.getSelectedItem();
        List<String> empty = new ArrayList();
        conn = ConnectDb.setupConnection();
        try
        {
            String sqlStatement = "select name from ingredient where ingredientID in (select ingredientID from usesingredient where recipeID=(select recipeID from recipe where name=?))";
            pst = (OraclePreparedStatement) conn.prepareStatement(sqlStatement);
            pst.setString(1, Recipe);
            ResultSet rs =pst.executeQuery();
            while(rs.next()){
                empty.add(rs.getString(1));
            }
            for (int i = 0; i < empty.size(); i++) {
                IngriendentList.add(empty.get(i));
            }

            sqlStatement = "select instructions from recipe where name=?";
            pst = (OraclePreparedStatement) conn.prepareStatement(sqlStatement);
            pst.setString(1, Recipe);
            rs =pst.executeQuery();
            while(rs.next()){
                recipeInstructions.setText(rs.getString(1));
            }

        }

        catch (Exception e)
        {
            e.printStackTrace();
        }
        finally
        {
            ConnectDb.close(rs);
            ConnectDb.close(pst);
            ConnectDb.close(conn);
        }

    }//GEN-LAST:event_RecipeListActionPerformed

    private void jLayeredPane1HierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jLayeredPane1HierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jLayeredPane1HierarchyChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.List IngriendentList;
    private java.awt.List RecipeList;
    private javax.swing.JButton addNewRecipe;
    private javax.swing.JButton deleteRecipe;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea recipeInstructions;
    private javax.swing.JTextPane searchBar;
    private javax.swing.JButton searchByCat;
    private javax.swing.JButton searchByIngri;
    // End of variables declaration//GEN-END:variables
}
